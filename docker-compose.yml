version: '3.9'

services:
  client:
    container_name: prakticum-client
    build:
      context: .
      dockerfile: Dockerfile.client
      args:
        CLIENT_PORT: ${CLIENT_PORT}
    restart: always
    ports:
      - '${CLIENT_PORT}:${CLIENT_PORT}'
    environment:
      - CLIENT_PORT=${CLIENT_PORT}
      - SERVER_PORT=${SERVER_PORT}
      - EXTERNAL_SERVER_URL=${EXTERNAL_SERVER_URL}
      - INTERNAL_SERVER_URL=${INTERNAL_SERVER_URL}
    depends_on:
      - server
    networks:
      - awesome

  server:
    container_name: prakticum-server
    env_file:
      - './.env'
    build:
      context: .
      dockerfile: Dockerfile.server
      args:
        SERVER_PORT: ${SERVER_PORT}
    restart: always
    ports:
      - '${SERVER_PORT}:${SERVER_PORT}'
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - awesome

  postgres:
    image: postgres:14
    env_file:
      - './.env'
    ports:
      - '${POSTGRES_PORT}:${POSTGRES_PORT}'
    volumes:
      - ./tmp/pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U postgres']
      interval: 1s
      timeout: 5s
      retries: 10
    networks:
      - awesome

  nginx:
    image: nginx:latest
    ports:
      - '80:80'
      - '443:443'
    restart: always
    volumes:
      - ./nginx/conf/:/etc/nginx/conf.d/:ro
      - ./data/certbot/www:/var/www/certbot/:ro
      - ./data/certbot/conf/:/etc/nginx/ssl/:ro
    depends_on:
      - certbot
      - client
      - server

  certbot:
    image: certbot/certbot:latest
    volumes:
      - ./data/certbot/conf:/etc/letsencrypt/:rw
      - ./data/certbot/www:/var/www/certbot/:rw
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew --webroot -w /var/www/certbot; sleep 12h; done;'"

networks:
  awesome:
    driver: bridge
